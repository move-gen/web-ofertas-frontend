// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id                      Int       @id @default(autoincrement())
  sku                     String    @unique // From <id>
  name                    String    // From <title>
  version                 String?   // From <version>
  vin                     String?   @unique // From <vin>
  
  // Pricing
  regularPrice            Float     // From <price>
  financedPrice           Float?    // From <financed_price>
  monthlyFinancingFee     Float?    // From <monthly_financing_fee>
  vatDeductible           Boolean   @default(false) // From <vat>

  // Core Details
  make                    String?   // From <make>
  model                   String?   // From <model>
  bodytype                String?   // From <bodytype>
  year                    Int?      // From <year>
  month                   Int?      // From <month>
  kms                     Int?      // From <kms>
  fuel                    String?   // From <fuel>
  power                   Int?      // From <power> (CV)
  transmission            String?   // From <transmission>
  color                   String?   // From <color>
  doors                   Int?      // From <doors>
  seats                   Int?      // From <seats>
  engineSize              Int?      // From <engine_size> (cc)
  gears                   Int?      // From <gears>

  // Location
  store                   String?   // From <store>
  city                    String?   // From <city>
  address                 String?   // From <address>

  // Technical & Status
  numberplate             String?   // From <numberplate>
  guarantee               String?   // From <guarantee>
  environmentalBadge      String?   // From <environmental_badge>
  crashed                 Boolean   @default(false) // From <crashed>

  // Descriptions
  description             String?   @db.Text // From <content>
  equipment               String?   @db.Text // From <equipment>
  
  images                  Image[]
  offers                  Offer[]   @relation("CarToOffer")

  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model Offer {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  cars      Car[]    @relation("CarToOffer")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  car       Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId     Int
  isPrimary Boolean  @default(false)
  source    String   @default("feed") // "feed" or "manual"
}
